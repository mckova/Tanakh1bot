import logging
import random
from telegram import Update, ForceReply
from telegram.ext import Application, CommandHandler, ContextTypes, MessageHandler, filters

# הגדרת הלוגים
logging.basicConfig(format="%(asctime)s - %(name)s - %(levelname)s - %(message)s", level=logging.INFO)
logger = logging.getLogger(__name__)

# רשימת שאלות ותשובות לדוגמה
QUESTIONS_ANSWERS = [
    {"question": "מי היה המלך הראשון של ישראל?", "answer": "שאול"},
    {"question": "כמה דיברות יש בעשרת הדיברות?", "answer": "עשר"},
    {"question": "מהי פרשת השבוע הראשונה בתורה?", "answer": "בראשית"},
]

# פונקציה לברוך משתמש חדש
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user = update.effective_user
    await update.message.reply_html(
        rf"שלום {user.mention_html()}! אני בוט הכנה לבגרות בתנ\"ך של תיכון אחד העם. שלח 'שאלה' כדי להתחיל!",
        reply_markup=ForceReply(selective=True),
    )

# פונקציה לעזרה
async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    await update.message.reply_text("שלח 'שאלה' כדי לקבל שאלה, או 'עזרה' כדי לקבל מידע נוסף.")

# פונקציה לטיפול בשאלות
async def handle_question(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    question = context.user_data.get("current_question")

    if not question:
        # בחירת שאלה חדשה
        question_data = random.choice(QUESTIONS_ANSWERS)
        context.user_data["current_question"] = question_data
        await update.message.reply_text(f"שאלה: {question_data['question']}")
    else:
        # בדיקת תשובה
        user_answer = update.message.text.strip()
        correct_answer = question["answer"]
        if user_answer.lower() == correct_answer.lower():
            await update.message.reply_text("✅ תשובה נכונה! רוצה עוד שאלה? שלח 'שאלה'.")
            context.user_data["current_question"] = None
        else:
            await update.message.reply_text(f"❌ תשובה שגויה. התשובה הנכונה היא: {correct_answer}.")
            context.user_data["current_question"] = None

# פונקציה לברירת מחדל
async def unknown(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    await update.message.reply_text("לא הבנתי את הבקשה. נסה 'שאלה' או 'עזרה'.")

# הפעלת הבוט
def main() -> None:
    # יצירת האפליקציה
    application = Application.builder().token("7627399280:AAFC9n36jWrjOJqy3Mj2DDgl84GJYNKpC8U").build()

    # הגדרת הפקודות
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("help", help_command))

    # טיפול בהודעות טקסט
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_question))

    # טיפול בהודעות לא מוכרות
    application.add_handler(MessageHandler(filters.COMMAND, unknown))

    # הפעלת הבוט
    application.run_polling()

if __name__ == "__main__":
    main()
